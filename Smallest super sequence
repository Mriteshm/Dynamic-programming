import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    public static void main(String[] args) throws IOException  {
		String str1 = br.readLine();
		String str2 = br.readLine();
		int min_len = smallestSuperSequence(str1, str2);
		System.out.print(min_len);
	}
	public static int helper(String a,String b,int i,int j,int[][]dp)
	{
		if(i==a.length())
		{
			return b.length()-j;
		}
		if(j==b.length())
		{
			return a.length()-i;
		}
		if(dp[i][j]!=-1)
		{
			return dp[i][j];
		}
		if(a.charAt(i)==b.charAt(j))
		{
			dp[i][j]= 1+helper(a,b,i+1,j+1,dp);
			return dp[i][j];
		}
		else
		{
			int ans1=helper(a,b,i+1,j,dp);
			int ans2=helper(a,b,i,j+1,dp);
			dp[i][j]= 1+Math.min(ans1,ans2);
			return dp[i][j];
		}
	}

	public static int smallestSuperSequence(String str1, String str2) {
        int dp[][]=new int[str1.length()][str2.length()];
		for(int i=0;i<dp.length;i++)
		{
			for(int j=0;j<dp[0].length;j++)
			{
               dp[i][j]=-1;
			}
		}
       return helper(str1,str2,0,0,dp);
	
		}
        
}
